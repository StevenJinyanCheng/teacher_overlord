# Generated by Django 5.2.1 on 2025-05-17 13:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0006_customuser_teaching_classes_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('award_type', models.CharField(choices=[('star', 'Star Rating'), ('badge', 'Badge'), ('certificate', 'Certificate'), ('other', 'Other')], default='star', max_length=20)),
                ('level', models.PositiveSmallIntegerField(default=1, help_text='For star ratings: 1-5 stars; for others: achievement level')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('award_date', models.DateField()),
                ('awarded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='awarded_recognitions', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='awards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Award',
                'verbose_name_plural': 'Awards',
                'ordering': ['-award_date', '-level'],
            },
        ),
        migrations.CreateModel(
            name='BehaviorScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_type', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative')], default='positive', max_length=10)),
                ('points', models.IntegerField(default=1)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date_of_behavior', models.DateField()),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recorded_scores', to=settings.AUTH_USER_MODEL)),
                ('rule_sub_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_scores', to='api.rulesubitem')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_scores', to='api.schoolclass')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='behavior_scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Behavior Score',
                'verbose_name_plural': 'Behavior Scores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParentObservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date_of_behavior', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(limit_choices_to={'role': 'parent'}, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_observations', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_observations', to=settings.AUTH_USER_MODEL)),
                ('rule_sub_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_observations', to='api.rulesubitem')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='parent_observations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parent Observation',
                'verbose_name_plural': 'Parent Observations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentSelfReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date_of_behavior', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to=settings.AUTH_USER_MODEL)),
                ('rule_sub_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_reports', to='api.rulesubitem')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='self_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Self Report',
                'verbose_name_plural': 'Student Self Reports',
                'ordering': ['-created_at'],
            },
        ),
    ]
